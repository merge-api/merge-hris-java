
/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;

import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import merge_hris_client.JSON;
import org.threeten.bp.OffsetDateTime;

/**
 * # The Location Object ### Description The &#x60;Location&#x60; object is used to represent a Location for a Company or Employee address. This is shared across many models and is referenced whenever a location is stored.  ### Usage Example Fetch from the &#x60;LIST Locations&#x60; endpoint and filter by &#x60;ID&#x60; to show all office locations.
 */
@ApiModel(description = "# The Location Object ### Description The `Location` object is used to represent a Location for a Company or Employee address. This is shared across many models and is referenced whenever a location is stored.  ### Usage Example Fetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T18:45:23.445197Z[Etc/UTC]")
public class LocationRawJson {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private JsonElement id;

  public static final String SERIALIZED_NAME_REMOTE_ID = "remote_id";
  @SerializedName(SERIALIZED_NAME_REMOTE_ID)
  private JsonElement remoteId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private JsonElement name;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private JsonElement phoneNumber;

  public static final String SERIALIZED_NAME_STREET1 = "street_1";
  @SerializedName(SERIALIZED_NAME_STREET1)
  private JsonElement street1;

  public static final String SERIALIZED_NAME_STREET2 = "street_2";
  @SerializedName(SERIALIZED_NAME_STREET2)
  private JsonElement street2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private JsonElement city;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private JsonElement state;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zip_code";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private JsonElement zipCode;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private JsonElement country;

  public static final String SERIALIZED_NAME_REMOTE_DATA = "remote_data";
  @SerializedName(SERIALIZED_NAME_REMOTE_DATA)
  private JsonElement remoteData;

  private transient JSON serializer;

  public LocationRawJson(JSON srlzer) { 
    
    this.serializer = srlzer;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonElement getId() {
    return id;
  }

  public LocationRawJson remoteId(String remoteId) {
    this.remoteId = this.serializer.getGson().toJsonTree(remoteId);
    return this;
  }

   /**
   * The third-party API ID of the matching object.
   * @return remoteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "93018402", value = "The third-party API ID of the matching object.")

  public JsonElement getRemoteId() {
    return remoteId;
  }
  public void setRemoteId(JsonElement remoteId) {
    this.remoteId = remoteId;
  }

  public LocationRawJson name(String name) {
    this.name = this.serializer.getGson().toJsonTree(name);
    return this;
  }

   /**
   * The location&#39;s name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NYC Office", value = "The location's name.")

  public JsonElement getName() {
    return name;
  }
  public void setName(JsonElement name) {
    this.name = name;
  }

  public LocationRawJson phoneNumber(String phoneNumber) {
    this.phoneNumber = this.serializer.getGson().toJsonTree(phoneNumber);
    return this;
  }

   /**
   * The location&#39;s phone number.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+1111111111", value = "The location's phone number.")

  public JsonElement getPhoneNumber() {
    return phoneNumber;
  }
  public void setPhoneNumber(JsonElement phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public LocationRawJson street1(String street1) {
    this.street1 = this.serializer.getGson().toJsonTree(street1);
    return this;
  }

   /**
   * Line 1 of the location&#39;s street address.
   * @return street1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2920 Broadway", value = "Line 1 of the location's street address.")

  public JsonElement getStreet1() {
    return street1;
  }
  public void setStreet1(JsonElement street1) {
    this.street1 = street1;
  }

  public LocationRawJson street2(String street2) {
    this.street2 = this.serializer.getGson().toJsonTree(street2);
    return this;
  }

   /**
   * Line 2 of the location&#39;s street address.
   * @return street2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2nd Floor", value = "Line 2 of the location's street address.")

  public JsonElement getStreet2() {
    return street2;
  }
  public void setStreet2(JsonElement street2) {
    this.street2 = street2;
  }

  public LocationRawJson city(String city) {
    this.city = this.serializer.getGson().toJsonTree(city);
    return this;
  }

   /**
   * The location&#39;s city.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "New York ", value = "The location's city.")

  public JsonElement getCity() {
    return city;
  }
  public void setCity(JsonElement city) {
    this.city = city;
  }

  public LocationRawJson state(String state) {
    this.state = this.serializer.getGson().toJsonTree(state);
    return this;
  }

   /**
   * The location&#39;s state. Represents a region if outside of the US.
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NY", value = "The location's state. Represents a region if outside of the US.")

  public JsonElement getState() {
    return state;
  }
  public void setState(JsonElement state) {
    this.state = state;
  }

  public LocationRawJson zipCode(String zipCode) {
    this.zipCode = this.serializer.getGson().toJsonTree(zipCode);
    return this;
  }

   /**
   * The location&#39;s zip code.
   * @return zipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10027", value = "The location's zip code.")

  public JsonElement getZipCode() {
    return zipCode;
  }
  public void setZipCode(JsonElement zipCode) {
    this.zipCode = zipCode;
  }

  public LocationRawJson country(CountryEnum country) {
    this.country = this.serializer.getGson().toJsonTree(country);
    return this;
  }

   /**
   * The location&#39;s country.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USA", value = "The location's country.")

  public JsonElement getCountry() {
    return country;
  }
  public void setCountry(JsonElement country) {
    this.country = country;
  }

   /**
   * Get remoteData
   * @return remoteData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"path\":\"/locations\",\"data\":[\"Varies by platform\"]}]", value = "")

  public JsonElement getRemoteData() {
    return remoteData;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationRawJson location = (LocationRawJson) o;
    return Objects.equals(this.id.getAsString(), location.id.getAsString()) &&
        Objects.equals(this.remoteId.getAsString(), location.remoteId.getAsString()) &&
        Objects.equals(this.name.getAsString(), location.name.getAsString()) &&
        Objects.equals(this.phoneNumber.getAsString(), location.phoneNumber.getAsString()) &&
        Objects.equals(this.street1.getAsString(), location.street1.getAsString()) &&
        Objects.equals(this.street2.getAsString(), location.street2.getAsString()) &&
        Objects.equals(this.city.getAsString(), location.city.getAsString()) &&
        Objects.equals(this.state.getAsString(), location.state.getAsString()) &&
        Objects.equals(this.zipCode.getAsString(), location.zipCode.getAsString()) &&
        Objects.equals(this.country.getAsString(), location.country.getAsString()) &&
        Objects.equals(this.remoteData.getAsString(), location.remoteData.getAsString());
  }
  @Override
  public int hashCode() {
    return Objects.hash(id, remoteId, name, phoneNumber, street1, street2, city, state, zipCode, country, remoteData);
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationRawJson {\n");
    sb.append("    id: ").append(toIndentedString(id.getAsString())).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId.getAsString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name.getAsString())).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber.getAsString())).append("\n");
    sb.append("    street1: ").append(toIndentedString(street1.getAsString())).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2.getAsString())).append("\n");
    sb.append("    city: ").append(toIndentedString(city.getAsString())).append("\n");
    sb.append("    state: ").append(toIndentedString(state.getAsString())).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode.getAsString())).append("\n");
    sb.append("    country: ").append(toIndentedString(country.getAsString())).append("\n");
    sb.append("    remoteData: ").append(toIndentedString(remoteData.getAsString())).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


