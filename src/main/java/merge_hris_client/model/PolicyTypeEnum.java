/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets PolicyTypeEnum
 */
@JsonAdapter(PolicyTypeEnum.Adapter.class)
public enum PolicyTypeEnum {
  /**
  * Merge maps most values from all integrations to a single set of CommonModel enum options. However, in the event
  * Merge encounters an unrecognized value, it will be returned as-is in the api response, and this SDK will interpret
  * that as this default MERGE_NONSTANDARD_VALUE option.
  */
  MERGE_NONSTANDARD_VALUE("MERGE_NONSTANDARD_VALUE"),
  
  VACATION("VACATION"),
  
  SICK("SICK"),
  
  PERSONAL("PERSONAL"),
  
  JURY_DUTY("JURY_DUTY"),
  
  VOLUNTEER("VOLUNTEER"),
  
  BEREAVEMENT("BEREAVEMENT");

  private String value;

  PolicyTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PolicyTypeEnum fromValue(String value) {
    for (PolicyTypeEnum b : PolicyTypeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return PolicyTypeEnum.MERGE_NONSTANDARD_VALUE;
  }

  public static class Adapter extends TypeAdapter<PolicyTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final PolicyTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PolicyTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PolicyTypeEnum.fromValue(value);
    }
  }
}

