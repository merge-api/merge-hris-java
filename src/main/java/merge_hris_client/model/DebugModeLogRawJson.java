
/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;

import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import merge_hris_client.JSON;
import org.threeten.bp.OffsetDateTime;

/**
 * DebugModeLogRawJson
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-06T21:54:01.920674Z[Etc/UTC]")
public class DebugModeLogRawJson {
  public static final String SERIALIZED_NAME_LOG_ID = "log_id";
  @SerializedName(SERIALIZED_NAME_LOG_ID)
  private JsonElement logId;

  public static final String SERIALIZED_NAME_DASHBOARD_VIEW = "dashboard_view";
  @SerializedName(SERIALIZED_NAME_DASHBOARD_VIEW)
  private JsonElement dashboardView;

  public static final String SERIALIZED_NAME_LOG_SUMMARY = "log_summary";
  @SerializedName(SERIALIZED_NAME_LOG_SUMMARY)
  private JsonElement logSummary;

  private transient JSON serializer;

  public DebugModeLogRawJson(JSON srlzer) { 
    
    this.serializer = srlzer;
  }

  public DebugModeLogRawJson logId(String logId) {
    this.logId = this.serializer.getGson().toJsonTree(logId);
    return this;
  }

   /**
   * Get logId
   * @return logId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "99433219-8017-4acd-bb3c-ceb23d663832", required = true, value = "")

  public JsonElement getLogId() {
    return logId;
  }
  public void setLogId(JsonElement logId) {
    this.logId = logId;
  }

  public DebugModeLogRawJson dashboardView(String dashboardView) {
    this.dashboardView = this.serializer.getGson().toJsonTree(dashboardView);
    return this;
  }

   /**
   * Get dashboardView
   * @return dashboardView
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832", required = true, value = "")

  public JsonElement getDashboardView() {
    return dashboardView;
  }
  public void setDashboardView(JsonElement dashboardView) {
    this.dashboardView = dashboardView;
  }

  public DebugModeLogRawJson logSummary(DebugModelLogSummary logSummary) {
    this.logSummary = this.serializer.getGson().toJsonTree(logSummary);
    return this;
  }

   /**
   * Get logSummary
   * @return logSummary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public JsonElement getLogSummary() {
    return logSummary;
  }
  public void setLogSummary(JsonElement logSummary) {
    this.logSummary = logSummary;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebugModeLogRawJson debugModeLog = (DebugModeLogRawJson) o;
    return Objects.equals(this.logId.getAsString(), debugModeLog.logId.getAsString()) &&
        Objects.equals(this.dashboardView.getAsString(), debugModeLog.dashboardView.getAsString()) &&
        Objects.equals(this.logSummary.getAsString(), debugModeLog.logSummary.getAsString());
  }
  @Override
  public int hashCode() {
    return Objects.hash(logId, dashboardView, logSummary);
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebugModeLogRawJson {\n");
    sb.append("    logId: ").append(toIndentedString(logId.getAsString())).append("\n");
    sb.append("    dashboardView: ").append(toIndentedString(dashboardView.getAsString())).append("\n");
    sb.append("    logSummary: ").append(toIndentedString(logSummary.getAsString())).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


