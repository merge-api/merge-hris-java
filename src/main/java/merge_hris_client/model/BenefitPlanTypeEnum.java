/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets BenefitPlanTypeEnum
 */
@JsonAdapter(BenefitPlanTypeEnum.Adapter.class)
public enum BenefitPlanTypeEnum {
  /**
  * Merge maps most values from all integrations to a single set of CommonModel enum options. However, in the event
  * Merge encounters an unrecognized value, it will be returned as-is in the api response, and this SDK will interpret
  * that as this default MERGE_NONSTANDARD_VALUE option.
  */
  MERGE_NONSTANDARD_VALUE("MERGE_NONSTANDARD_VALUE"),
  
  MEDICAL("MEDICAL"),
  
  DENTAL("DENTAL"),
  
  VISION("VISION"),
  
  HSA("HSA"),
  
  FSA_MEDICAL("FSA_MEDICAL"),
  
  FSA_DEPENDENT_CARE("FSA_DEPENDENT_CARE"),
  
  SIMPLE_IRA("SIMPLE_IRA"),
  
  _401K("_401K"),
  
  ROTH_401K("ROTH_401K"),
  
  OTHER_NON_TAXABLE("OTHER_NON_TAXABLE"),
  
  COMMUTER_TRANSIT("COMMUTER_TRANSIT"),
  
  COMMUTER_PARKING("COMMUTER_PARKING"),
  
  _401K_LOAN_PAYMENT("_401K_LOAN_PAYMENT"),
  
  SHORT_DISABILITY("SHORT_DISABILITY"),
  
  LONG_DISABILITY("LONG_DISABILITY"),
  
  LIFE("LIFE"),
  
  SEP_IRA("SEP_IRA"),
  
  SARSEP("SARSEP"),
  
  CUSTOM_TAXABLE("CUSTOM_TAXABLE"),
  
  _403B("_403B"),
  
  ROTH_403B("ROTH_403B"),
  
  STUDENT_LOAN("STUDENT_LOAN");

  private String value;

  BenefitPlanTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BenefitPlanTypeEnum fromValue(String value) {
    for (BenefitPlanTypeEnum b : BenefitPlanTypeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return BenefitPlanTypeEnum.MERGE_NONSTANDARD_VALUE;
  }

  public static class Adapter extends TypeAdapter<BenefitPlanTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final BenefitPlanTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BenefitPlanTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BenefitPlanTypeEnum.fromValue(value);
    }
  }
}

