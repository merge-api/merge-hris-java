/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import merge_hris_client.model.RemoteData;
import org.threeten.bp.OffsetDateTime;

/**
 * # The PayrollRun Object ### Description The &#x60;PayrollRun&#x60; object is used to represent a payroll run.  ### Usage Example Fetch from the &#x60;LIST PayrollRuns&#x60; endpoint and filter by &#x60;ID&#x60; to show all payroll runs.
 */
@ApiModel(description = "# The PayrollRun Object ### Description The `PayrollRun` object is used to represent a payroll run.  ### Usage Example Fetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T18:45:23.445197Z[Etc/UTC]")
public class PayrollRun {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_REMOTE_ID = "remote_id";
  @SerializedName(SERIALIZED_NAME_REMOTE_ID)
  private String remoteId;

  public static final String SERIALIZED_NAME_RUN_STATE = "run_state";
  @SerializedName(SERIALIZED_NAME_RUN_STATE)
  private String runState;

  public static final String SERIALIZED_NAME_RUN_TYPE = "run_type";
  @SerializedName(SERIALIZED_NAME_RUN_TYPE)
  private String runType;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_CHECK_DATE = "check_date";
  @SerializedName(SERIALIZED_NAME_CHECK_DATE)
  private OffsetDateTime checkDate;

  public static final String SERIALIZED_NAME_REMOTE_DATA = "remote_data";
  @SerializedName(SERIALIZED_NAME_REMOTE_DATA)
  private List<RemoteData> remoteData = null;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "37336947-b3d4-4a4c-a310-ab6ab510e079", value = "")

  public UUID getId() {
    return id;
  }




  public PayrollRun remoteId(String remoteId) {
    
    this.remoteId = remoteId;
    return this;
  }

   /**
   * The third-party API ID of the matching object.
   * @return remoteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "19202938", value = "The third-party API ID of the matching object.")

  public String getRemoteId() {
    return remoteId;
  }


  public void setRemoteId(String remoteId) {
    this.remoteId = remoteId;
  }


  public PayrollRun runState(String runState) {
    
    this.runState = runState;
    return this;
  }

   /**
   * Get runState
   * @return runState
  **/
  @ApiModelProperty(example = "PAID", required = true, value = "")

  public String getRunState() {
    return runState;
  }


  public void setRunState(String runState) {
    this.runState = runState;
  }


  public PayrollRun runType(String runType) {
    
    this.runType = runType;
    return this;
  }

   /**
   * Get runType
   * @return runType
  **/
  @ApiModelProperty(example = "REGULAR", required = true, value = "")

  public String getRunType() {
    return runType;
  }


  public void setRunType(String runType) {
    this.runType = runType;
  }


  public PayrollRun startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The day and time the payroll run started.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-08T00:00Z", value = "The day and time the payroll run started.")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public PayrollRun endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The day and time the payroll run ended.
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-15T00:00Z", value = "The day and time the payroll run ended.")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public PayrollRun checkDate(OffsetDateTime checkDate) {
    
    this.checkDate = checkDate;
    return this;
  }

   /**
   * The day and time the payroll run was checked.
   * @return checkDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-11-15T00:00Z", value = "The day and time the payroll run was checked.")

  public OffsetDateTime getCheckDate() {
    return checkDate;
  }


  public void setCheckDate(OffsetDateTime checkDate) {
    this.checkDate = checkDate;
  }


   /**
   * Get remoteData
   * @return remoteData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"path\":\"/payroll\",\"data\":[\"Varies by platform\"]}]", value = "")

  public List<RemoteData> getRemoteData() {
    return remoteData;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollRun payrollRun = (PayrollRun) o;
    return Objects.equals(this.id, payrollRun.id) &&
        Objects.equals(this.remoteId, payrollRun.remoteId) &&
        Objects.equals(this.runState, payrollRun.runState) &&
        Objects.equals(this.runType, payrollRun.runType) &&
        Objects.equals(this.startDate, payrollRun.startDate) &&
        Objects.equals(this.endDate, payrollRun.endDate) &&
        Objects.equals(this.checkDate, payrollRun.checkDate) &&
        Objects.equals(this.remoteData, payrollRun.remoteData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, remoteId, runState, runType, startDate, endDate, checkDate, remoteData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollRun {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId)).append("\n");
    sb.append("    runState: ").append(toIndentedString(runState)).append("\n");
    sb.append("    runType: ").append(toIndentedString(runType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    checkDate: ").append(toIndentedString(checkDate)).append("\n");
    sb.append("    remoteData: ").append(toIndentedString(remoteData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

