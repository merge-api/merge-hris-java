
/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;

import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import merge_hris_client.JSON;
import org.threeten.bp.OffsetDateTime;

/**
 * # The Employment Object ### Description The &#x60;Employment&#x60; object is used to represent an employment position at a company. These are associated with the employee filling the role.  ### Usage Example Fetch from the &#x60;LIST Employments&#x60; endpoint and filter by &#x60;ID&#x60; to show all employees.
 */
@ApiModel(description = "# The Employment Object ### Description The `Employment` object is used to represent an employment position at a company. These are associated with the employee filling the role.  ### Usage Example Fetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-04T18:48:46.006564Z[Etc/UTC]")
public class EmploymentRawJson {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private JsonElement id;

  public static final String SERIALIZED_NAME_REMOTE_ID = "remote_id";
  @SerializedName(SERIALIZED_NAME_REMOTE_ID)
  private JsonElement remoteId;

  public static final String SERIALIZED_NAME_EMPLOYEE = "employee";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE)
  private JsonElement employee;

  public static final String SERIALIZED_NAME_JOB_TITLE = "job_title";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private JsonElement jobTitle;

  public static final String SERIALIZED_NAME_PAY_RATE = "pay_rate";
  @SerializedName(SERIALIZED_NAME_PAY_RATE)
  private JsonElement payRate;

  public static final String SERIALIZED_NAME_PAY_PERIOD = "pay_period";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD)
  private JsonElement payPeriod;

  public static final String SERIALIZED_NAME_PAY_FREQUENCY = "pay_frequency";
  @SerializedName(SERIALIZED_NAME_PAY_FREQUENCY)
  private JsonElement payFrequency;

  public static final String SERIALIZED_NAME_PAY_CURRENCY = "pay_currency";
  @SerializedName(SERIALIZED_NAME_PAY_CURRENCY)
  private JsonElement payCurrency;

  public static final String SERIALIZED_NAME_FLSA_STATUS = "flsa_status";
  @SerializedName(SERIALIZED_NAME_FLSA_STATUS)
  private JsonElement flsaStatus;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effective_date";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private JsonElement effectiveDate;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employment_type";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  private JsonElement employmentType;

  public static final String SERIALIZED_NAME_REMOTE_DATA = "remote_data";
  @SerializedName(SERIALIZED_NAME_REMOTE_DATA)
  private JsonElement remoteData;

  private transient JSON serializer;

  public EmploymentRawJson(JSON srlzer) { 
    
    this.serializer = srlzer;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "65d8ffd0-211b-4ba4-b85a-fbe2ce220982", value = "")

  public JsonElement getId() {
    return id;
  }

  public EmploymentRawJson remoteId(String remoteId) {
    this.remoteId = this.serializer.getGson().toJsonTree(remoteId);
    return this;
  }

   /**
   * The third-party API ID of the matching object.
   * @return remoteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "19202938", value = "The third-party API ID of the matching object.")

  public JsonElement getRemoteId() {
    return remoteId;
  }
  public void setRemoteId(JsonElement remoteId) {
    this.remoteId = remoteId;
  }

  public EmploymentRawJson employee(UUID employee) {
    this.employee = this.serializer.getGson().toJsonTree(employee);
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0958cbc6-6040-430a-848e-aafacbadf4ae", value = "")

  public JsonElement getEmployee() {
    return employee;
  }
  public void setEmployee(JsonElement employee) {
    this.employee = employee;
  }

  public EmploymentRawJson jobTitle(String jobTitle) {
    this.jobTitle = this.serializer.getGson().toJsonTree(jobTitle);
    return this;
  }

   /**
   * The position&#39;s title.
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Software Engineer", value = "The position's title.")

  public JsonElement getJobTitle() {
    return jobTitle;
  }
  public void setJobTitle(JsonElement jobTitle) {
    this.jobTitle = jobTitle;
  }

  public EmploymentRawJson payRate(Float payRate) {
    this.payRate = this.serializer.getGson().toJsonTree(payRate);
    return this;
  }

   /**
   * The position&#39;s pay rate in dollars.
   * @return payRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "80000.00", value = "The position's pay rate in dollars.")

  public JsonElement getPayRate() {
    return payRate;
  }
  public void setPayRate(JsonElement payRate) {
    this.payRate = payRate;
  }

  public EmploymentRawJson payPeriod(PayPeriodEnum payPeriod) {
    this.payPeriod = this.serializer.getGson().toJsonTree(payPeriod);
    return this;
  }

   /**
   * The time period this pay rate encompasses.
   * @return payPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "YEAR", value = "The time period this pay rate encompasses.")

  public JsonElement getPayPeriod() {
    return payPeriod;
  }
  public void setPayPeriod(JsonElement payPeriod) {
    this.payPeriod = payPeriod;
  }

  public EmploymentRawJson payFrequency(PayFrequencyEnum payFrequency) {
    this.payFrequency = this.serializer.getGson().toJsonTree(payFrequency);
    return this;
  }

   /**
   * The position&#39;s pay frequency.
   * @return payFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BIWEEKLY", value = "The position's pay frequency.")

  public JsonElement getPayFrequency() {
    return payFrequency;
  }
  public void setPayFrequency(JsonElement payFrequency) {
    this.payFrequency = payFrequency;
  }

  public EmploymentRawJson payCurrency(PayCurrencyEnum payCurrency) {
    this.payCurrency = this.serializer.getGson().toJsonTree(payCurrency);
    return this;
  }

   /**
   * The position&#39;s currency code.
   * @return payCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "The position's currency code.")

  public JsonElement getPayCurrency() {
    return payCurrency;
  }
  public void setPayCurrency(JsonElement payCurrency) {
    this.payCurrency = payCurrency;
  }

  public EmploymentRawJson flsaStatus(FlsaStatusEnum flsaStatus) {
    this.flsaStatus = this.serializer.getGson().toJsonTree(flsaStatus);
    return this;
  }

   /**
   * The position&#39;s FLSA status.
   * @return flsaStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EXEMPT", value = "The position's FLSA status.")

  public JsonElement getFlsaStatus() {
    return flsaStatus;
  }
  public void setFlsaStatus(JsonElement flsaStatus) {
    this.flsaStatus = flsaStatus;
  }

  public EmploymentRawJson effectiveDate(OffsetDateTime effectiveDate) {
    this.effectiveDate = this.serializer.getGson().toJsonTree(effectiveDate);
    return this;
  }

   /**
   * The position&#39;s effective date.
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-10-06T18:42:34Z", value = "The position's effective date.")

  public JsonElement getEffectiveDate() {
    return effectiveDate;
  }
  public void setEffectiveDate(JsonElement effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public EmploymentRawJson employmentType(EmploymentTypeEnum employmentType) {
    this.employmentType = this.serializer.getGson().toJsonTree(employmentType);
    return this;
  }

   /**
   * The position&#39;s type of employment.
   * @return employmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FULL TIME", value = "The position's type of employment.")

  public JsonElement getEmploymentType() {
    return employmentType;
  }
  public void setEmploymentType(JsonElement employmentType) {
    this.employmentType = employmentType;
  }

   /**
   * Get remoteData
   * @return remoteData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"path\":\"/jobs\",\"data\":[\"Varies by platform\"]}]", value = "")

  public JsonElement getRemoteData() {
    return remoteData;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmploymentRawJson employment = (EmploymentRawJson) o;
    return Objects.equals(this.id.getAsString(), employment.id.getAsString()) &&
        Objects.equals(this.remoteId.getAsString(), employment.remoteId.getAsString()) &&
        Objects.equals(this.employee.getAsString(), employment.employee.getAsString()) &&
        Objects.equals(this.jobTitle.getAsString(), employment.jobTitle.getAsString()) &&
        Objects.equals(this.payRate.getAsString(), employment.payRate.getAsString()) &&
        Objects.equals(this.payPeriod.getAsString(), employment.payPeriod.getAsString()) &&
        Objects.equals(this.payFrequency.getAsString(), employment.payFrequency.getAsString()) &&
        Objects.equals(this.payCurrency.getAsString(), employment.payCurrency.getAsString()) &&
        Objects.equals(this.flsaStatus.getAsString(), employment.flsaStatus.getAsString()) &&
        Objects.equals(this.effectiveDate.getAsString(), employment.effectiveDate.getAsString()) &&
        Objects.equals(this.employmentType.getAsString(), employment.employmentType.getAsString()) &&
        Objects.equals(this.remoteData.getAsString(), employment.remoteData.getAsString());
  }
  @Override
  public int hashCode() {
    return Objects.hash(id, remoteId, employee, jobTitle, payRate, payPeriod, payFrequency, payCurrency, flsaStatus, effectiveDate, employmentType, remoteData);
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmploymentRawJson {\n");
    sb.append("    id: ").append(toIndentedString(id.getAsString())).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId.getAsString())).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee.getAsString())).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle.getAsString())).append("\n");
    sb.append("    payRate: ").append(toIndentedString(payRate.getAsString())).append("\n");
    sb.append("    payPeriod: ").append(toIndentedString(payPeriod.getAsString())).append("\n");
    sb.append("    payFrequency: ").append(toIndentedString(payFrequency.getAsString())).append("\n");
    sb.append("    payCurrency: ").append(toIndentedString(payCurrency.getAsString())).append("\n");
    sb.append("    flsaStatus: ").append(toIndentedString(flsaStatus.getAsString())).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate.getAsString())).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType.getAsString())).append("\n");
    sb.append("    remoteData: ").append(toIndentedString(remoteData.getAsString())).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


