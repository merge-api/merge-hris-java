
/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;

import com.google.gson.JsonElement;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import merge_hris_client.JSON;
import org.threeten.bp.OffsetDateTime;

/**
 * # The Earning Object ### Description The &#x60;Earning&#x60; object is used to represent an earning for a given employee&#39;s payroll run. One run could include several earnings.  ### Usage Example Fetch from the &#x60;LIST Earnings&#x60; endpoint and filter by &#x60;ID&#x60; to show all earnings.
 */
@ApiModel(description = "# The Earning Object ### Description The `Earning` object is used to represent an earning for a given employee's payroll run. One run could include several earnings.  ### Usage Example Fetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T18:45:23.445197Z[Etc/UTC]")
public class EarningRawJson {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private JsonElement id;

  public static final String SERIALIZED_NAME_EMPLOYEE_PAYROLL_RUN = "employee_payroll_run";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PAYROLL_RUN)
  private JsonElement employeePayrollRun;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private JsonElement amount;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private JsonElement type;

  public static final String SERIALIZED_NAME_REMOTE_DATA = "remote_data";
  @SerializedName(SERIALIZED_NAME_REMOTE_DATA)
  private JsonElement remoteData;

  private transient JSON serializer;

  public EarningRawJson(JSON srlzer) { 
    
    this.serializer = srlzer;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "babbced6-3a81-4775-8da2-490dc6385259", value = "")

  public JsonElement getId() {
    return id;
  }

  public EarningRawJson employeePayrollRun(UUID employeePayrollRun) {
    this.employeePayrollRun = this.serializer.getGson().toJsonTree(employeePayrollRun);
    return this;
  }

   /**
   * The earning&#39;s employee payroll run.
   * @return employeePayrollRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "35347df1-95e7-46e2-93cc-66f1191edca5", value = "The earning's employee payroll run.")

  public JsonElement getEmployeePayrollRun() {
    return employeePayrollRun;
  }
  public void setEmployeePayrollRun(JsonElement employeePayrollRun) {
    this.employeePayrollRun = employeePayrollRun;
  }

  public EarningRawJson amount(Float amount) {
    this.amount = this.serializer.getGson().toJsonTree(amount);
    return this;
  }

   /**
   * The amount earned.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1002.34", value = "The amount earned.")

  public JsonElement getAmount() {
    return amount;
  }
  public void setAmount(JsonElement amount) {
    this.amount = amount;
  }

  public EarningRawJson type(String type) {
    this.type = this.serializer.getGson().toJsonTree(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "SALARY", required = true, value = "")

  public JsonElement getType() {
    return type;
  }
  public void setType(JsonElement type) {
    this.type = type;
  }

  public EarningRawJson remoteData(List<Map<String, Object>> remoteData) {
    this.remoteData = this.serializer.getGson().toJsonTree(remoteData);
    return this;
  }

   /**
   * Get remoteData
   * @return remoteData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"path\":\"/payroll-earnings\",\"data\":[\"Varies by platform\"]}]", value = "")

  public JsonElement getRemoteData() {
    return remoteData;
  }
  public void setRemoteData(JsonElement remoteData) {
    this.remoteData = remoteData;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EarningRawJson earning = (EarningRawJson) o;
    return Objects.equals(this.id.getAsString(), earning.id.getAsString()) &&
        Objects.equals(this.employeePayrollRun.getAsString(), earning.employeePayrollRun.getAsString()) &&
        Objects.equals(this.amount.getAsString(), earning.amount.getAsString()) &&
        Objects.equals(this.type.getAsString(), earning.type.getAsString()) &&
        Objects.equals(this.remoteData.getAsString(), earning.remoteData.getAsString());
  }
  @Override
  public int hashCode() {
    return Objects.hash(id, employeePayrollRun, amount, type, remoteData);
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EarningRawJson {\n");
    sb.append("    id: ").append(toIndentedString(id.getAsString())).append("\n");
    sb.append("    employeePayrollRun: ").append(toIndentedString(employeePayrollRun.getAsString())).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount.getAsString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type.getAsString())).append("\n");
    sb.append("    remoteData: ").append(toIndentedString(remoteData.getAsString())).append("\n");
    sb.append("}");
    return sb.toString();
  }
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


