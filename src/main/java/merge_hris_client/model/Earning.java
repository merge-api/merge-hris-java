/*
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package merge_hris_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import merge_hris_client.model.EarningTypeEnum;

/**
 * # The Earning Object ### Description The &#x60;Earning&#x60; object is used to represent an earning for a given employee&#39;s payroll run. One run could include several earnings.  ### Usage Example Fetch from the &#x60;LIST Earnings&#x60; endpoint and filter by &#x60;ID&#x60; to show all earnings.
 */
@ApiModel(description = "# The Earning Object ### Description The `Earning` object is used to represent an earning for a given employee's payroll run. One run could include several earnings.  ### Usage Example Fetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-12T20:57:27.935941Z[Etc/UTC]")
public class Earning {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_EMPLOYEE_PAYROLL_RUN = "employee_payroll_run";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PAYROLL_RUN)
  private UUID employeePayrollRun;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private EarningTypeEnum type;

  public static final String SERIALIZED_NAME_REMOTE_DATA = "remote_data";
  @SerializedName(SERIALIZED_NAME_REMOTE_DATA)
  private List<Map<String, Object>> remoteData = null;

  public static final String SERIALIZED_NAME_REMOTE_WAS_DELETED = "remote_was_deleted";
  @SerializedName(SERIALIZED_NAME_REMOTE_WAS_DELETED)
  private Boolean remoteWasDeleted;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "babbced6-3a81-4775-8da2-490dc6385259", value = "")

  public UUID getId() {
    return id;
  }




  public Earning employeePayrollRun(UUID employeePayrollRun) {
    
    this.employeePayrollRun = employeePayrollRun;
    return this;
  }

   /**
   * Get employeePayrollRun
   * @return employeePayrollRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "35347df1-95e7-46e2-93cc-66f1191edca5", value = "")

  public UUID getEmployeePayrollRun() {
    return employeePayrollRun;
  }


  public void setEmployeePayrollRun(UUID employeePayrollRun) {
    this.employeePayrollRun = employeePayrollRun;
  }


  public Earning amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount earned.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1002.34", value = "The amount earned.")

  public Float getAmount() {
    return amount;
  }


  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public Earning type(EarningTypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of earning.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SALARY", value = "The type of earning.")

  public EarningTypeEnum getType() {
    return type;
  }


  public void setType(EarningTypeEnum type) {
    this.type = type;
  }


  public Earning remoteData(List<Map<String, Object>> remoteData) {
    
    this.remoteData = remoteData;
    return this;
  }

  public Earning addRemoteDataItem(Map<String, Object> remoteDataItem) {
    if (this.remoteData == null) {
      this.remoteData = new ArrayList<Map<String, Object>>();
    }
    this.remoteData.add(remoteDataItem);
    return this;
  }

   /**
   * Get remoteData
   * @return remoteData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"path\":\"/payroll-earnings\",\"data\":[\"Varies by platform\"]}]", value = "")

  public List<Map<String, Object>> getRemoteData() {
    return remoteData;
  }


  public void setRemoteData(List<Map<String, Object>> remoteData) {
    this.remoteData = remoteData;
  }


  public Earning remoteWasDeleted(Boolean remoteWasDeleted) {
    
    this.remoteWasDeleted = remoteWasDeleted;
    return this;
  }

   /**
   * Indicates whether or not this object has been deleted on the third-party.
   * @return remoteWasDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether or not this object has been deleted on the third-party.")

  public Boolean getRemoteWasDeleted() {
    return remoteWasDeleted;
  }


  public void setRemoteWasDeleted(Boolean remoteWasDeleted) {
    this.remoteWasDeleted = remoteWasDeleted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Earning earning = (Earning) o;
    return Objects.equals(this.id, earning.id) &&
        Objects.equals(this.employeePayrollRun, earning.employeePayrollRun) &&
        Objects.equals(this.amount, earning.amount) &&
        Objects.equals(this.type, earning.type) &&
        Objects.equals(this.remoteData, earning.remoteData) &&
        Objects.equals(this.remoteWasDeleted, earning.remoteWasDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employeePayrollRun, amount, type, remoteData, remoteWasDeleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Earning {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employeePayrollRun: ").append(toIndentedString(employeePayrollRun)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    remoteData: ").append(toIndentedString(remoteData)).append("\n");
    sb.append("    remoteWasDeleted: ").append(toIndentedString(remoteWasDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

